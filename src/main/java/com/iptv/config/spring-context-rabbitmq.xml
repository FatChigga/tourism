<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/rabbit
    http://www.springframework.org/schema/rabbit/spring-rabbit.xsd" >

    <description>rabbitmq 连接服务配置</description>

    <!-- 连接配置 -->
    <rabbit:connection-factory id="mqConnectionFactory" host="${mq.host}" username="${mq.username}" password="${mq.password}" port="${mq.port}"  virtual-host="${mq.vhost}"/>

    <!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成-->
    <rabbit:admin connection-factory="mqConnectionFactory"/>

    <!-- 声明消息队列 -->
    <!-- durable:是否持久化,宕机恢复后会重持久化日志恢复消息队列 -->
    <!-- exclusive: 仅创建者可以使用的私有队列，断开后自动删除 -->
    <!-- auto_delete: 当所有消费客户端连接断开后，是否自动删除队列 -->
    <!-- 若已经声明消息队列，并且设置跟以下设置不一致，会报错，必须先去管理中心删除该消息队列，再重新创建消息队列 -->
    <rabbit:queue id="myQueue" name="myQueue" durable="true" auto-delete="false" exclusive="false" />

    <!-- 定义交换机 -->
    <rabbit:direct-exchange id="myExchange" name="myExchange" durable="true" auto-delete="false" >
        <!-- 可以绑定多个消息队列 -->
        <rabbit:bindings>
            <rabbit:binding queue="myQueue" key="myQueueKey"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <!-- 消息对象json转换类 -->
    <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />

    <!-- spring template声明-->
    <rabbit:template id="amqpTemplate" exchange="myExchange"  connection-factory="mqConnectionFactory"  message-converter="jsonMessageConverter"/>

    <!-- 定义监听器 -->
    <rabbit:listener-container connection-factory="mqConnectionFactory" acknowledge="auto">
        <rabbit:listener queues="myQueue" ref="queueListenter"/>
    </rabbit:listener-container>

    <!-- 定义监听队列的处理类 -->
    <bean id="queueListenter" class="com.iptv.core.mq.MqHandler" />
</beans>
